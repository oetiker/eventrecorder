{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/eventrecorder/source/class/cboulanger/eventrecorder/ObjectIdTooltip.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "extend",
    "core",
    "Object",
    "include",
    "cboulanger",
    "eventrecorder",
    "MHelperMethods",
    "properties",
    "includeNodesWithoutQxId",
    "check",
    "nullable",
    "init",
    "members",
    "__lastTarget",
    "tooltip",
    "ui",
    "ToolTip",
    "addGlobalEventListener",
    "target",
    "event",
    "getContentElement",
    "getDomElement",
    "getType",
    "id",
    "getAttribute",
    "toString",
    "Id",
    "getAbsoluteIdOf",
    "isIncludeNodesWithoutQxId",
    "includes",
    "data",
    "getData",
    "Array",
    "getItem",
    "length",
    "HTMLElement",
    "lang",
    "Type",
    "isObject",
    "JSON",
    "stringify",
    "substr",
    "isString",
    "msg",
    "setLabel",
    "placeToElement",
    "show",
    "hide",
    "startsWith",
    "console",
    "info",
    "defer",
    "bom",
    "Lifecycle",
    "onReady",
    "ObjectIdTooltip",
    "getInstance"
  ],
  "mappings": "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",
  "file": "ObjectIdTooltip.js",
  "sourcesContent": [
    "/**\n * When added to the `applications[x].include` section of `compile.json`,\n * this class will automatically create a small popup with the id of the widget\n * when hovering over it.\n */\nqx.Class.define(\"cboulanger.eventrecorder.ObjectIdTooltip\", {\n  type: \"singleton\",\n  extend: qx.core.Object,\n  include : [cboulanger.eventrecorder.MHelperMethods],\n\n  properties: {\n    includeNodesWithoutQxId: {\n      check: \"Boolean\",\n      nullable: false,\n      init: false\n    }\n  },\n\n  members: {\n\n    /**\n     * The last widget for which a tooltip was displayed\n     */\n    __lastTarget: null,\n\n    /**\n     * Start automatically displaying the tooltips\n     */\n    init: function() {\n      const tooltip = new qx.ui.tooltip.ToolTip();\n      this.addGlobalEventListener((target, event) => {\n        if (target === tooltip.getContentElement().getDomElement()) {\n         return;\n        }\n        const type = event.getType();\n        const id = (typeof target.getAttribute == \"function\") ?\n          (target.getAttribute(\"data-qx-object-id\") || target.toString() + \" (no qx id attribute)\") :\n          (target instanceof qx.core.Object ?\n            qx.core.Id.getAbsoluteIdOf(target, true) || (target.toString()+\" (no qx id)\") :\n            target.toString());\n        if (!this.isIncludeNodesWithoutQxId() && id.includes(\"no qx id\")) {\n          return;\n        }\n\n        // data\n        let data = (typeof event.getData == \"function\") ? event.getData() : null;\n        // selections are arrays\n        if (data instanceof qx.data.Array) {\n          data = data.getItem(0);\n        } else if (data instanceof Array && data.length) {\n          data = data[0];\n        }\n        switch (true) {\n          case data instanceof HTMLElement:\n            data = target.getAttribute(\"data-qx-object-id\") || target.toString() + \" (no qx id attribute)\";\n            break;\n          case data instanceof qx.core.Object:\n            data = qx.core.Id.getAbsoluteIdOf(data, true) || data.toString() + \" (no qx id)\";\n            break;\n          case qx.lang.Type.isObject(data):\n            data = JSON.stringify(data);\n            if (data.length > 100) {\n              data = data.substr(0, 100) + \" [...]\";\n            }\n            break;\n          case qx.lang.Type.isString(data):\n            data = `'${data}'`;\n            break;\n        }\n        let msg = data !== null ?\n          `==> ID ${id}: event '${type}' was fired with data ${data}` :\n          `==> ID ${id}: event ${type} was fired.`;\n        switch (type) {\n          case \"pointerover\": {\n            if (id) {\n              tooltip.setLabel(id);\n              tooltip.placeToElement(target);\n              tooltip.show();\n              this.__lastTarget = target;\n            }\n            break;\n          }\n          case \"pointerout\":\n            tooltip.hide();\n            break;\n          default:\n            if (id.startsWith(\"eventrecorder\")) {\n              return;\n            }\n            // log all events that relate to the widget for which a toolip was just displayed\n            if (target === this.__lastTarget) {\n              switch (true) {\n                // don't ignore virtual cell events\n                case type.startsWith(\"cell\"):\n                  break;\n                // ignore the following event types\n                case type.startsWith(\"mouse\"):\n                case type.startsWith(\"pointer\"):\n                case type.startsWith(\"touch\"):\n                case type.includes(\"track\"):\n                case type.includes(\"activate\"):\n                case type.includes(\"capture\"):\n                case type.includes(\"focus\"):\n                case type.includes(\"key\"):\n                case type.includes(\"click\"):\n                case type.includes(\"tap\"):\n                case type === \"press\":\n                case type === \"blur\":\n                case type === \"roll\":\n                case type === \"loaded\":\n                case type === \"swipe\":\n                case type === \"release\":\n                case type === \"resize\":\n                case type === \"changeVisibility\":\n                case type === \"input\":\n                  return;\n              }\n              console.info(msg);\n            } else {\n              switch (true) {\n                case type !== \"change\" && type.startsWith(\"change\") && !type.includes(\"Visibility\"):\n                case type === \"execute\":\n                case type.startsWith(\"tree\"):\n                  console.info(msg);\n              }\n            }\n        }\n      });\n    }\n  },\n\n  /**\n   * Will be called after class has been loaded, before application startup\n   */\n  defer: function() {\n    if (qx.core.Environment.get(\"module.objectid\")) {\n      qx.bom.Lifecycle.onReady(() => cboulanger.eventrecorder.ObjectIdTooltip.getInstance().init());\n    }\n  }\n});\n"
  ]
}