{
  "className": "qookery.IValidator",
  "packageName": "qookery",
  "name": "IValidator",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 22,
        "column": 0
      },
      "end": {
        "line": 35,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "Qookery - Declarative UI Building for Qooxdoo\n\nCopyright (c) Ergobyte Informatics S.A., www.ergobyte.gr\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License."
        },
        {
          "name": "@description",
          "body": "Validators are used by components to instanciate validation functions"
        }
      ]
    }
  },
  "type": "interface",
  "members": {
    "createValidation": {
      "location": {
        "start": {
          "line": 33,
          "column": 2
        },
        "end": {
          "line": 33,
          "column": 68
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Create a validation function"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "component {qookery.IComponent} component that will receive the new validation",
            "paramName": "component",
            "description": " component that will receive the new validation",
            "type": "qookery.IComponent"
          },
          {
            "name": "@param",
            "body": "invalidMessage {String?} message that will be displayed when validation fails",
            "paramName": "invalidMessage",
            "description": " message that will be displayed when validation fails",
            "optional": true,
            "type": "String"
          },
          {
            "name": "@param",
            "body": "options {Map?} optional map with validator-specific arguments",
            "paramName": "options",
            "description": " optional map with validator-specific arguments",
            "optional": true,
            "type": "Map"
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "descendants": []
}