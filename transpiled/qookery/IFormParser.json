{
  "className": "qookery.IFormParser",
  "packageName": "qookery",
  "name": "IFormParser",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 22,
        "column": 0
      },
      "end": {
        "line": 36,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "Qookery - Declarative UI Building for Qooxdoo\n\nCopyright (c) Ergobyte Informatics S.A., www.ergobyte.gr\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License."
        },
        {
          "name": "@description",
          "body": "Interface providing access to some internals of the Qookery XML parser"
        }
      ]
    }
  },
  "type": "interface",
  "members": {
    "parseXmlDocument": {
      "location": {
        "start": {
          "line": 34,
          "column": 2
        },
        "end": {
          "line": 34,
          "column": 62
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Parse and generate a Qookery form"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "xmlDocument {qx.xml.Document} input DOM XML document structured according to the form.xsd schema",
            "paramName": "xmlDocument",
            "description": " input DOM XML document structured according to the form.xsd schema",
            "type": "qx.xml.Document"
          },
          {
            "name": "@param",
            "body": "parentComponent {qookery.IContainerComponent} an optional parent component that will hold generated results or <code>null</code>",
            "paramName": "parentComponent",
            "description": " an optional parent component that will hold generated results or <code>null</code>",
            "type": "qookery.IContainerComponent"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qookery.IComponent} the root of the generated component hierarchy - typically a form component",
            "type": "qookery.IComponent",
            "description": " the root of the generated component hierarchy - typically a form component"
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "descendants": []
}