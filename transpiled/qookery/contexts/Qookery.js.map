{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/eventrecorder/contrib/ergobyte_qookery_v0.7.0-pre/qookery/source/class/qookery/contexts/Qookery.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "statics",
    "getOption",
    "qookery",
    "Qookery",
    "setOption",
    "getRegistry",
    "getService",
    "loadResource",
    "resourceUri",
    "thisArg",
    "successCallback",
    "failCallback",
    "resourceLoader",
    "openWindow",
    "form",
    "options",
    "window",
    "impl",
    "FormWindow",
    "hasInterface",
    "constructor",
    "IFormComponent",
    "key",
    "setVariable",
    "openForm",
    "formXml",
    "createAndOpen",
    "createFormat",
    "specification",
    "createComponent",
    "parentComponent",
    "componentName",
    "attributes",
    "componentQName",
    "indexOf",
    "component",
    "create",
    "setup",
    "ascendForms",
    "callback",
    "isDisposed",
    "result",
    "undefined",
    "getParentForm",
    "descendComponents",
    "IContainerComponent",
    "childComponents",
    "listChildren",
    "i",
    "length",
    "contexts",
    "setPropertyRecursively",
    "propertyName",
    "propertyValue",
    "c",
    "hasProperty",
    "set",
    "loadForm",
    "formUrl",
    "model",
    "variables",
    "createForm",
    "xmlCode",
    "xmlDocument",
    "xml",
    "Document",
    "fromString",
    "parser",
    "createFormParser",
    "formComponent",
    "parseXmlDocument",
    "call",
    "error",
    "log",
    "Logger",
    "dispose"
  ],
  "mappings": "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",
  "file": "Qookery.js",
  "sourcesContent": [
    "/*\n\tQookery - Declarative UI Building for Qooxdoo\n\n\tCopyright (c) Ergobyte Informatics S.A., www.ergobyte.gr\n\n\tLicensed under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License.\n\tYou may obtain a copy of the License at\n\n\t\thttp://www.apache.org/licenses/LICENSE-2.0\n\n\tUnless required by applicable law or agreed to in writing, software\n\tdistributed under the License is distributed on an \"AS IS\" BASIS,\n\tWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\tSee the License for the specific language governing permissions and\n\tlimitations under the License.\n*/\n\n/**\n * The 'Qookery' scripting context is always available to XML authors and provides\n * a number of commonly used methods.\n */\nqx.Class.define(\"qookery.contexts.Qookery\", {\n\n\ttype: \"static\",\n\n\tstatics: {\n\n\t\t// Methods ported from root Qookery static class\n\n\t\tgetOption: qookery.Qookery.getOption,\n\n\t\tsetOption: qookery.Qookery.setOption,\n\n\t\tgetRegistry: qookery.Qookery.getRegistry,\n\n\t\tgetService: qookery.Qookery.getService,\n\n\t\t// Additional methods of use to XML authors\n\n\t\t/**\n\t\t * Use resource loader to load a resource\n\t\t *\n\t\t * @param resourceUri {String} URI of the resource to load\n\t\t * @param thisArg {Object ? null} object to set as <code>this</code> for callbacks\n\t\t * @param successCallback {Function} callback to call after successful load\n\t\t * @param failCallback {Function} callback to call in case load fails\n\t\t *\n\t\t * @return {String|null} loaded resource as text in case call is synchronous\n\t\t */\n\t\tloadResource: function(resourceUri, thisArg, successCallback, failCallback) {\n\t\t\tvar resourceLoader = qookery.Qookery.getService(\"qookery.IResourceLoader\", true);\n\t\t\treturn resourceLoader.loadResource(resourceUri, thisArg, successCallback, failCallback);\n\t\t},\n\n\t\t/**\n\t\t * Open a window with a form as content\n\t\t *\n\t\t * @param form {String|qookery.IFormComponent} URL of the XML form to load, or a form component\n\t\t * @param options {Map ? null} any of FormWindow options in addition to any of those below\n\t\t *\t\t<ul>\n\t\t *\t\t<li>model {any} optional model to load into the form</li>\n\t\t *\t\t<li>variables {Map ? null} optional variables to pass to the form parser</li>\n\t\t *\t\t<li>onClose {Function ? null} callback that will receive the form's result property when window is closed</li>\n\t\t *\t\t</ul>\n\t\t * @param thisArg {Object ? null} object to set as <code>this</code> for callbacks\n\t\t *\n\t\t * @return {qookery.impl.FormWindow} newly opened form window\n\t\t */\n\t\topenWindow: function(form, options, thisArg) {\n\t\t\tif(!options) options = { };\n\t\t\tvar window = new qookery.impl.FormWindow(null, null, options, thisArg);\n\t\t\tif(qx.Class.hasInterface(form.constructor, qookery.IFormComponent)) {\n\t\t\t\tif(options[\"variables\"]) {\n\t\t\t\t\tfor(var key in options[\"variables\"]) {\n\t\t\t\t\t\tform.setVariable(key, options[\"variables\"][key]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\twindow.openForm(form, options[\"model\"]);\n\t\t\t}\n\t\t\telse this.loadResource(form, null, function(formXml) {\n\t\t\t\twindow.createAndOpen(formXml, options[\"model\"], options[\"variables\"]);\n\t\t\t});\n\t\t\treturn window;\n\t\t},\n\n\t\t/**\n\t\t * Create a new format instance\n\t\t *\n\t\t * @param specification {String} valid format specification or a registered factory or format name\n\t\t * @param options {Map ? null} any number of options to pass to the format class constructor\n\t\t *\n\t\t * @return {qx.util.format.IFormat} new format instance or null if not available\n\t\t */\n\t\tcreateFormat: function(specification, options) {\n\t\t\treturn qookery.Qookery.getRegistry().createFormat(specification, options);\n\t\t},\n\n\t\t/**\n\t\t * Programmatically create a new Qookery component\n\t\t *\n\t\t * @param parentComponent {qookery.IContainerComponent} parent component to hold new component\n\t\t * @param componentName {String} qualified or symbolic name of the new component's implementation class\n\t\t * @param attributes {Map ? null} any number of attributes understood by new component implementation\n\t\t *\n\t\t * @return {qookery.IComponent} newly created component\n\t\t */\n\t\tcreateComponent: function(parentComponent, componentName, attributes) {\n\t\t\tvar componentQName = componentName.indexOf(\"{\") === 0 ? componentName : \"{http://www.qookery.org/ns/Form}\" + componentName;\n\t\t\tvar component = qookery.Qookery.getRegistry().createComponent(componentQName, parentComponent);\n\t\t\tcomponent.create(attributes);\n\t\t\tcomponent.setup();\n\t\t\treturn component;\n\t\t},\n\n\t\t/**\n\t\t * Ascend the form hierarchy, starting from given form\n\t\t *\n\t\t * @param form {qookery.IFormComponent} the form to start ascending from\n\t\t * @param callback {Function} a function that will be called with each encountered form\n\t\t *\t\t\t- a non-undefined return value breaks the ascension\n\t\t * @return {undefined}\n\t\t */\n\t\tascendForms: function(form, callback) {\n\t\t\twhile(form != null && !form.isDisposed()) {\n\t\t\t\tvar result = callback(form);\n\t\t\t\tif(result !== undefined) return result;\n\t\t\t\tform = form.getParentForm();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Iterate all components under the hierarchy starting with given component\n\t\t *\n\t\t * @param component {qookery.IComponent} the component to start descending from\n\t\t * @param callback {Function} a function that will be called with each encountered component\n\t\t *\t\t\t- a non-undefined return value breaks the recursion\n\t\t * @return {any} value returned by callback if descending was interrupted or <code>undefined</code>\n\t\t */\n\t\tdescendComponents: function(component, callback) {\n\t\t\tvar result = callback(component);\n\t\t\tif(result !== undefined) return result;\n\t\t\tif(!(qx.Class.hasInterface(component.constructor, qookery.IContainerComponent)))\n\t\t\t\treturn undefined;\n\t\t\tvar childComponents = component.listChildren();\n\t\t\tfor(var i = 0; i < childComponents.length; i++) {\n\t\t\t\tqookery.contexts.Qookery.descendComponents(childComponents[i], callback);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Starting from given component, descend all children altering the value of a component property\n\t\t *\n\t\t * @param component {qookery.IComponent} the component to start descending from\n\t\t * @param propertyName {String} the name of the property to set\n\t\t * @param propertyValue {any} the new value to set\n\t\t */\n\t\tsetPropertyRecursively: function(component, propertyName, propertyValue) {\n\t\t\tqookery.contexts.Qookery.descendComponents(component, function(c) {\n\t\t\t\tif(!qx.Class.hasProperty(c.constructor, propertyName)) return;\n\t\t\t\tc.set(propertyName, propertyValue);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Load a Qookery form from a URL\n\t\t *\n\t\t * @param formUrl {String} URI of the resource to load\n\t\t * @param thisArg {Object} object to set as <code>this</code> for callbacks\n\t\t * @param options {Map ? null} operation options\n\t\t *\t<ul>\n\t\t *\t\t<li>async {Boolean} if <code>true</code> load asynchronously - this is the default\n\t\t *\t\t<li>fail {Function} callback to call in case load fails</li>\n\t\t *\t\t<li>model {Object} form model</li>\n\t\t *\t\t<li>success {Function} callback to call after successful load</li>\n\t\t *\t\t<li>variables {Object ? null} variables that will be available in xml <code> $.variableName</code></li>\n\t\t *\t</ul>\n\t\t *\n\t\t * @return {qookery.IComponent|null} loaded form component if synchronous or <code>null</code>\n\t\t */\n\t\tloadForm: function(formUrl, thisArg, options) {\n\t\t\tvar successCallback = options[\"success\"];\n\t\t\tvar failCallback = options[\"fail\"];\n\t\t\tvar model = options[\"model\"];\n\t\t\tvar variables = options[\"variables\"];\n\t\t\tvar createForm = function(xmlCode) {\n\t\t\t\tvar xmlDocument = qx.xml.Document.fromString(xmlCode);\n\t\t\t\tvar parser = qookery.Qookery.createFormParser(variables);\n\t\t\t\ttry {\n\t\t\t\t\tvar formComponent = parser.parseXmlDocument(xmlDocument);\n\t\t\t\t\tif(successCallback)\n\t\t\t\t\t\tsuccessCallback.call(thisArg, formComponent, model, variables);\n\t\t\t\t\treturn formComponent;\n\t\t\t\t}\n\t\t\t\tcatch(error) {\n\t\t\t\t\tqx.log.Logger.error(this, \"Error creating form editor\", error);\n\t\t\t\t\tif(failCallback)\n\t\t\t\t\t\tfailCallback.call(thisArg);\n\t\t\t\t}\n\t\t\t\tfinally {\n\t\t\t\t\tparser.dispose();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tvar resourceLoader = qookery.Qookery.getService(\"qookery.IResourceLoader\", true);\n\t\t\tif(options[\"async\"] === false) {\n\t\t\t\tvar xmlCode = resourceLoader.loadResource(formUrl, thisArg, null, failCallback);\n\t\t\t\treturn createForm(xmlCode);\n\t\t\t}\n\t\t\treturn resourceLoader.loadResource(formUrl, thisArg, createForm, failCallback);\n\t\t}\n\t}\n});\n"
  ]
}