{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/eventrecorder/contrib/ergobyte_qookery_v0.7.0-pre/qookery/source/class/qookery/internal/components/RadioButtonGroupComponent.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "qookery",
    "internal",
    "components",
    "EditableComponent",
    "implement",
    "IContainerComponent",
    "construct",
    "parentComponent",
    "__children",
    "members",
    "getAttributeType",
    "attributeName",
    "_createMainWidget",
    "layoutName",
    "getAttribute",
    "layoutFactory",
    "Qookery",
    "getRegistry",
    "get",
    "IRegistry",
    "P_LAYOUT_FACTORY",
    "layout",
    "createLayout",
    "radioButtonGroup",
    "ui",
    "form",
    "RadioButtonGroup",
    "getRadioGroup",
    "setAllowEmptySelection",
    "addListener",
    "event",
    "_disableValueEvents",
    "selection",
    "getData",
    "model",
    "length",
    "getModel",
    "setValue",
    "_applyWidgetAttributes",
    "setItems",
    "items",
    "__removeAllGroupItems",
    "data",
    "Array",
    "toArray",
    "lang",
    "Type",
    "isArray",
    "map",
    "label",
    "_getLabelOf",
    "__addGroupItem",
    "isObject",
    "Error",
    "setSelection",
    "itemNumber",
    "selectablesItems",
    "getMainWidget",
    "getSelectables",
    "add",
    "childComponent",
    "radioButton",
    "hasInterface",
    "constructor",
    "IRadioItem",
    "push",
    "listChildren",
    "remove",
    "component",
    "contains",
    "_updateUI",
    "value",
    "resetSelection",
    "selectionFound",
    "buttons",
    "getChildren",
    "modelProvider",
    "getForm",
    "getModelProvider",
    "i",
    "button",
    "areEqual",
    "setFocusable",
    "groupItem",
    "RadioButton",
    "setModel",
    "tabIndex",
    "setTabIndex",
    "removeAll",
    "forEach",
    "widget",
    "dispose",
    "destruct",
    "_disposeArray",
    "RadioButtonGroupComponent"
  ],
  "mappings": "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",
  "file": "RadioButtonGroupComponent.js",
  "sourcesContent": [
    "/*\n\tQookery - Declarative UI Building for Qooxdoo\n\n\tCopyright (c) Ergobyte Informatics S.A., www.ergobyte.gr\n\n\tLicensed under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License.\n\tYou may obtain a copy of the License at\n\n\t\thttp://www.apache.org/licenses/LICENSE-2.0\n\n\tUnless required by applicable law or agreed to in writing, software\n\tdistributed under the License is distributed on an \"AS IS\" BASIS,\n\tWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\tSee the License for the specific language governing permissions and\n\tlimitations under the License.\n*/\n\nqx.Class.define(\"qookery.internal.components.RadioButtonGroupComponent\", {\n\n\textend: qookery.internal.components.EditableComponent,\n\timplement: [ qookery.IContainerComponent ],\n\n\tconstruct: function(parentComponent) {\n\t\tthis.base(arguments, parentComponent);\n\t\tthis.__children = [ ];\n\t},\n\n\tmembers: {\n\n\t\t__children: null,\n\n\t\t// Metadata\n\n\t\tgetAttributeType: function(attributeName) {\n\t\t\tswitch(attributeName) {\n\t\t\tcase \"allow-empty-selection\": return \"Boolean\";\n\t\t\tcase \"layout\": return \"QName\";\n\t\t\tdefault: return this.base(arguments, attributeName);\n\t\t\t}\n\t\t},\n\n\t\t// Creation\n\n\t\t_createMainWidget: function() {\n\t\t\tvar layoutName = this.getAttribute(\"layout\", \"{http://www.qookery.org/ns/Form}h-box\");\n\t\t\tvar layoutFactory = qookery.Qookery.getRegistry().get(qookery.IRegistry.P_LAYOUT_FACTORY, layoutName, true);\n\t\t\tvar layout = layoutFactory.createLayout(this);\n\t\t\tvar radioButtonGroup = new qx.ui.form.RadioButtonGroup(layout);\n\t\t\tradioButtonGroup.getRadioGroup().setAllowEmptySelection(this.getAttribute(\"allow-empty-selection\", false));\n\t\t\tradioButtonGroup.addListener(\"changeSelection\", function(event) {\n\t\t\t\tif(this._disableValueEvents) return;\n\t\t\t\tvar selection = event.getData();\n\t\t\t\tvar model = selection.length !== 1 ? null : selection[0].getModel();\n\t\t\t\tthis.setValue(model);\n\t\t\t}, this);\n\n\t\t\tthis._applyWidgetAttributes(radioButtonGroup);\n\t\t\treturn radioButtonGroup;\n\t\t},\n\n\t\t// Public methods\n\n\t\tsetItems: function(items) {\n\t\t\tthis.__removeAllGroupItems();\n\t\t\tif(items == null) return;\n\t\t\tif(items instanceof qx.data.Array) {\n\t\t\t\titems = items.toArray();\n\t\t\t}\n\t\t\tif(qx.lang.Type.isArray(items)) {\n\t\t\t\titems.map(function(model) {\n\t\t\t\t\tvar label = this._getLabelOf(model);\n\t\t\t\t\tthis.__addGroupItem(model, label);\n\t\t\t\t}, this);\n\t\t\t}\n\t\t\telse if(qx.lang.Type.isObject(items)) {\n\t\t\t\tfor(var model in items) {\n\t\t\t\t\tvar label = items[model];\n\t\t\t\t\tthis.__addGroupItem(model, label);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse throw new Error(\"Items are of unsupported type\");\n\t\t},\n\n\t\tsetSelection: function(itemNumber) {\n\t\t\tvar selectablesItems = this.getMainWidget().getSelectables(true);\n\t\t\tif(selectablesItems.length === 0) return;\n\t\t\tthis.getMainWidget().setSelection([selectablesItems[itemNumber]]);\n\t\t},\n\n\t\t// IContainerComponent implementation\n\n\t\tadd: function(childComponent) {\n\t\t\tvar radioButton = childComponent.getMainWidget();\n\t\t\tif(!qx.Class.hasInterface(radioButton.constructor, qx.ui.form.IRadioItem))\n\t\t\t\tthrow new Error(\"<radio-button-group> supports only components with main widgets implementing IRadioItem\");\n\t\t\tthis.getMainWidget().add(radioButton);\n\t\t\tthis.__children.push(childComponent);\n\t\t},\n\n\t\tlistChildren: function() {\n\t\t\treturn this.__children;\n\t\t},\n\n\t\tremove: function(component) {\n\t\t\t// TODO RadioButtonGroup: Implement removal of children\n\t\t},\n\n\t\tcontains: function(component) {\n\t\t\t// TODO RadioButtonGroup: Implement contains()\n\t\t},\n\n\t\t// Internals\n\n\t\t_updateUI: function(value) {\n\t\t\tif(value == null) {\n\t\t\t\tthis.getMainWidget().resetSelection();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar radioButtonGroup = this.getMainWidget();\n\t\t\tvar selectionFound = false;\n\t\t\tvar buttons = radioButtonGroup.getChildren();\n\t\t\tvar modelProvider = this.getForm().getModelProvider();\n\t\t\tfor(var i = 0; i < buttons.length; i++) {\n\t\t\t\tvar button = buttons[i];\n\t\t\t\tvar model = button.getModel();\n\t\t\t\tif(!modelProvider.areEqual(model, value)) {\n\t\t\t\t\tbutton.setFocusable(false);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tbutton.setFocusable(true);\n\t\t\t\t\tradioButtonGroup.setSelection([ button ]);\n\t\t\t\t\tselectionFound = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(selectionFound != null) return;\n\t\t\tradioButtonGroup.resetSelection();\n\t\t\tif(buttons.length > 0) buttons[0].setFocusable(true);\n\t\t},\n\n\t\t__addGroupItem: function(model, label) {\n\t\t\tvar groupItem = new qx.ui.form.RadioButton(label);\n\t\t\tgroupItem.setModel(model);\n\t\t\tgroupItem.setFocusable(false);\n\t\t\tvar tabIndex = this.getAttribute(\"tab-index\");\n\t\t\tif(tabIndex != null)\n\t\t\t\tgroupItem.setTabIndex(tabIndex);\n\t\t\tthis.getMainWidget().add(groupItem);\n\t\t},\n\n\t\t__removeAllGroupItems: function() {\n\t\t\tthis.getMainWidget().removeAll().forEach(function(widget) { widget.dispose(); });\n\t\t}\n\t},\n\n\tdestruct: function() {\n\t\tthis._disposeArray(\"__children\");\n\t}\n});\n"
  ]
}