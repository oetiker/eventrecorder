{
  "className": "qookery.internal.components.ToolBarComponent",
  "packageName": "qookery.internal.components",
  "name": "ToolBarComponent",
  "superClass": "qookery.internal.components.Component",
  "interfaces": [
    "qookery.IContainerComponent"
  ],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 19,
        "column": 0
      },
      "end": {
        "line": 73,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "Qookery - Declarative UI Building for Qooxdoo\n\nCopyright (c) Ergobyte Informatics S.A., www.ergobyte.gr\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License."
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 24,
        "column": 1
      },
      "end": {
        "line": 28,
        "column": 2
      }
    }
  },
  "members": {
    "__children": {
      "location": {
        "start": {
          "line": 32,
          "column": 2
        },
        "end": {
          "line": 32,
          "column": 18
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__toolbar": {
      "location": {
        "start": {
          "line": 33,
          "column": 2
        },
        "end": {
          "line": 33,
          "column": 17
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__flexes": {
      "location": {
        "start": {
          "line": 34,
          "column": 2
        },
        "end": {
          "line": 34,
          "column": 16
        }
      },
      "type": "variable",
      "access": "private"
    },
    "create": {
      "location": {
        "start": {
          "line": 36,
          "column": 2
        },
        "end": {
          "line": 44,
          "column": 3
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qookery.IContainerComponent",
      "appearsIn": [
        "qookery.IContainerComponent",
        "qookery.IComponent",
        "qookery.internal.components.Component"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "attributes {Map} preprocessed attributes found in the defining XML document",
            "paramName": "attributes",
            "description": " preprocessed attributes found in the defining XML document",
            "type": "Map"
          }
        ]
      }
    },
    "_createWidgets": {
      "location": {
        "start": {
          "line": 46,
          "column": 2
        },
        "end": {
          "line": 51,
          "column": 3
        }
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qookery.internal.components.Component",
      "appearsIn": [
        "qookery.internal.components.Component"
      ]
    },
    "listChildren": {
      "location": {
        "start": {
          "line": 53,
          "column": 2
        },
        "end": {
          "line": 55,
          "column": 3
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qookery.IContainerComponent",
      "appearsIn": [
        "qookery.IContainerComponent"
      ],
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "body": "{Array} contained components",
            "type": "Array",
            "description": " contained components"
          }
        ]
      }
    },
    "add": {
      "location": {
        "start": {
          "line": 57,
          "column": 2
        },
        "end": {
          "line": 63,
          "column": 3
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qookery.IContainerComponent",
      "appearsIn": [
        "qookery.IContainerComponent"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "component {qookery.IComponent} the component to add into this component",
            "paramName": "component",
            "description": " the component to add into this component",
            "type": "qookery.IComponent"
          }
        ]
      }
    },
    "remove": {
      "location": {
        "start": {
          "line": 65,
          "column": 2
        },
        "end": {
          "line": 67,
          "column": 3
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qookery.IContainerComponent",
      "appearsIn": [
        "qookery.IContainerComponent"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "component {qookery.IComponent} component to remove",
            "paramName": "component",
            "description": " component to remove",
            "type": "qookery.IComponent"
          }
        ]
      }
    },
    "contains": {
      "location": {
        "start": {
          "line": 69,
          "column": 2
        },
        "end": {
          "line": 71,
          "column": 3
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qookery.IContainerComponent",
      "appearsIn": [
        "qookery.IContainerComponent"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "component {qookery.IComponent} component to look for",
            "paramName": "component",
            "description": " component to look for",
            "type": "qookery.IComponent"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> if component is a member of this container",
            "type": "Boolean",
            "description": " <code>true</code> if component is a member of this container"
          }
        ]
      }
    },
    "getEnabled": {
      "type": "function",
      "name": "getEnabled",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.Component",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>enabled</code>.\n\nFor further details take a look at the property definition: {@link #enabled}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for enabled"
          }
        ]
      }
    },
    "isEnabled": {
      "type": "function",
      "name": "isEnabled",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.IContainerComponent",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>enabled</code>.\n\nFor further details take a look at the property definition: {@link #enabled}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for enabled"
          }
        ]
      }
    },
    "setEnabled": {
      "type": "function",
      "name": "setEnabled",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.Component",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>enabled</code>.\n\nFor further details take a look at the property definition: {@link #enabled}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for enabled"
          }
        ]
      }
    },
    "resetEnabled": {
      "type": "function",
      "name": "resetEnabled",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.Component",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>enabled</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #enabled}."
          }
        ]
      }
    },
    "getVisibility": {
      "type": "function",
      "name": "getVisibility",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.Component",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>visibility</code>.\n\nFor further details take a look at the property definition: {@link #visibility}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for visibility"
          }
        ]
      }
    },
    "setVisibility": {
      "type": "function",
      "name": "setVisibility",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.Component",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>visibility</code>.\n\nFor further details take a look at the property definition: {@link #visibility}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for visibility"
          }
        ]
      }
    },
    "resetVisibility": {
      "type": "function",
      "name": "resetVisibility",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.Component",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>visibility</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #visibility}."
          }
        ]
      }
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.Component",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.Component",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.Component",
      "property": "reset"
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.Component",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.Component",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qookery.internal.components.Component",
      "property": "reset"
    }
  },
  "descendants": []
}